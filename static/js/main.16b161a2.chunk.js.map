{"version":3,"sources":["assets/images/android_big.png","assets/images/android_small.png","assets/images/atom_big.png","assets/images/atom_small.png","assets/images/intelij_big.png","assets/images/intelij_small.png","assets/images/pycharm_big.png","assets/images/pycharm_small.png","assets/hero.svg","assets/like.svg","assets/tag.svg","components/Card.tsx","components/CustomLinkButton.tsx","components/Footer.tsx","components/CustomLink.tsx","components/DropdownMenu.tsx","components/Header.tsx","components/Hero.tsx","components/RepeatGrid.tsx","components/StatCard.tsx","pages/mockData.ts","pages/Home.tsx","pages/Snippets.tsx","pages/Extensions.tsx","components/SidePanel.tsx","components/CustomInput.tsx","components/SignInForm.tsx","pages/SignIn.tsx","components/SignUpForm.tsx","pages/SignUp.tsx","pages/NoMatch.tsx","App.tsx","theme.ts","index.tsx","assets/images/vscode_small.png"],"names":["module","exports","Card","item","Stack","bg","w","h","p","fontSize","mb","borderTop","borderRadius","boxShadow","Text","fontWeight","title","mt","flex","description","Flex","alignItems","Image","size","src","TagSvg","ml","opacity","tag","color","owner","mr","score","LikeSvg","ButtonLink","React","props","ref","Button","as","ReactRouterLink","Footer","justifyContent","style","textDecoration","width","display","Link","RouterLink","DropdownMenu","Box","Menu","px","py","transition","rounded","_expanded","_focus","outline","Icon","name","left","CustomLink","to","Header","md","xs","IconButton","variant","aria-label","icon","CustomLinkButton","variantColor","Hero","Heading","fontFamily","textAlign","Delay","ms","Backspace","count","RepeatGrid","SimpleGrid","columns","spacing","position","zIndex","justifyItems","lg","l","i","push","key","boxes","StatCard","number","pb","mockData","id","Home","extensions","VsCodeBig","AndroidBig","AtomBig","IntelIJBig","PycharmBig","top","backgroundColor","m","heroImg","minHeight","flexWrap","map","extension","index","fill","Snippets","Extensions","SidePanel","currentPage","buttonText","buttonRoute","CustomInput","placeholder","InputGroup","children","Input","type","pl","SignInForm","initialValues","email","password","validationSchema","Yup","required","onSubmit","values","actions","setTimeout","console","log","setSubmitting","formikBag","handleSubmit","form","field","FormControl","isInvalid","errors","touched","FormErrorMessage","isLoading","isSubmitting","SignIn","href","ImGoogle3","ImGithub","username","min","BsPeopleCircle","SignUp","SignUpForm","NoMatch","App","basename","exact","path","theme","fonts","heading","body","mono","fontSizes","main","sm","xl","mega","ReactDOM","render","ThemeProvider","CSSReset","document","getElementById"],"mappings":"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","file":"static/js/main.16b161a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/android_big.8f2fa0d6.png\";","module.exports = __webpack_public_path__ + \"static/media/android_small.a1722844.png\";","module.exports = __webpack_public_path__ + \"static/media/atom_big.c9ac9d5b.png\";","module.exports = __webpack_public_path__ + \"static/media/atom_small.ebfa6451.png\";","module.exports = __webpack_public_path__ + \"static/media/intelij_big.aa14f9c8.png\";","module.exports = __webpack_public_path__ + \"static/media/intelij_small.73ce7efd.png\";","module.exports = __webpack_public_path__ + \"static/media/pycharm_big.4f06afc0.png\";","module.exports = __webpack_public_path__ + \"static/media/pycharm_small.b05c5492.png\";","module.exports = __webpack_public_path__ + \"static/media/hero.afdfc8fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.cba4f228.svg\";","module.exports = __webpack_public_path__ + \"static/media/tag.7fa671d5.svg\";","/* eslint-disable react/jsx-one-expression-per-line */\nimport { Flex, Image, Stack, Text } from '@chakra-ui/core';\nimport React from 'react';\nimport LikeSvg from '../assets/like.svg';\nimport TagSvg from '../assets/tag.svg';\n\ntype CardProp = {\n  item: {\n    id: number;\n    title: string;\n    description: string;\n    tag: string;\n    owner: string;\n    score: string;\n  };\n};\n\nfunction Card({ item }: CardProp) {\n  return (\n    <Stack\n      bg=\"white\"\n      w={['80%', '60%', '450px']}\n      h={['250px', '300px', '350px']}\n      p=\"2em\"\n      fontSize=\"lg\"\n      mb=\"1.5em\"\n      borderTop=\"8px solid teal\"\n      borderRadius=\"3px\"\n      boxShadow=\"0 4px 6px 0 hsla(0, 0%, 0%, 0.2)\"\n    >\n      <Text fontWeight=\"bold\" fontSize={['md', 'lg']}>\n        {item.title}\n      </Text>\n      <Text mt=\".5em\" flex={1} fontSize={['sm', 'md']}>\n        {item.description}\n      </Text>\n      <Flex alignItems=\"center\">\n        <Image size={['20px', '25px']} src={TagSvg} />\n        <Text fontWeight=\"bold\" fontSize={['xs']} ml=\".5em\" opacity={0.5}>\n          {item.tag}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Text flex={1} fontSize=\"sm\" fontWeight=\"bold\" color=\"gray.600\">\n          By: {item.owner}\n        </Text>\n        <Flex>\n          <Text color=\"blue.300\" fontWeight=\"bold\" mr=\".5em\">\n            {item.score}\n          </Text>\n          <Image size={['20px', '25px']} src={LikeSvg} />\n        </Flex>\n      </Flex>\n    </Stack>\n  );\n}\n\nexport default Card;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable no-unused-vars */\n\n// chakra team recommedation\n\nimport { Button } from '@chakra-ui/core';\nimport { ButtonProps } from '@chakra-ui/core/dist/Button';\nimport * as React from 'react';\nimport {\n  Link as ReactRouterLink,\n  LinkProps as RouterLinkProps\n} from 'react-router-dom';\n\ntype ButtonLinkProps = ButtonProps & RouterLinkProps;\n\nconst ButtonLink: React.FC<ButtonLinkProps> = React.forwardRef(\n  (props: ButtonLinkProps, ref: React.Ref<any>) => (\n    <Button ref={ref} as={ReactRouterLink} {...props} />\n  )\n);\n\nexport default ButtonLink;\n","import { Flex, Text } from '@chakra-ui/core';\nimport React from 'react';\n\nfunction Footer() {\n  return (\n    <Flex\n      h={['60px', '100px']}\n      bg=\"#1D1A1A\"\n      color=\"white\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Text fontSize={['sm', 'md']}>\n        © 2020, DevHyperCoder. All Rights Reserved\n      </Text>\n    </Flex>\n  );\n}\n\nexport default Footer;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable no-unused-vars */\n\n// found this solution from chakra's github, so i have to disable eslint for file.\n\nimport { Link as ChakraLink } from '@chakra-ui/core';\nimport * as React from 'react';\nimport { Link as RouterLink, LinkProps } from 'react-router-dom';\n\nconst style = {\n  textDecoration: 'none',\n  width: '100%',\n  display: 'inline-block'\n};\nconst Link = (props: LinkProps) => (\n  // @ts-ignore\n  <ChakraLink {...props} as={RouterLink} style={style} />\n);\n\nexport default Link;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport {\n  Box,\n  Icon,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList\n} from '@chakra-ui/core';\nimport React from 'react';\nimport CustomLink from './CustomLink';\n\nfunction DropdownMenu({ ...props }: any) {\n  return (\n    /* according to eslint, props spreading below is a bad practice. For now, I've disabled the\n     * rule for only this file as can be seen by the rule mentioned at the top of this current file\n     */\n    <Box color=\"black\" w=\"50px\" {...props}>\n      <Menu>\n        <MenuButton\n          px={4}\n          py={2}\n          transition=\"all 0.2s\"\n          rounded=\"md\"\n          _expanded={{ bg: 'blue.400' }}\n          _focus={{ outline: 'none', boxShadow: 'outline' }}\n        >\n          <Icon name=\"chevron-down\" color=\"white\" size=\"20px\" />\n        </MenuButton>\n\n        <MenuList left={0}>\n          <MenuItem>\n            <CustomLink to=\"/snippets\">Snippets</CustomLink>\n          </MenuItem>\n          <MenuItem>\n            <CustomLink to=\"/extensions\">Extensions</CustomLink>\n          </MenuItem>\n          <MenuItem>\n            <CustomLink to=\"/signin\">Sign up</CustomLink>\n          </MenuItem>\n          <MenuItem>\n            <CustomLink to=\"/signup\">Sign up</CustomLink>\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </Box>\n  );\n}\n\nexport default DropdownMenu;\n","import { Box, Flex, IconButton, Text } from '@chakra-ui/core';\nimport React from 'react';\nimport CustomLink from './CustomLink';\nimport CustomLinkButton from './CustomLinkButton';\nimport DropDownMenu from './DropdownMenu';\n\nfunction Header() {\n  return (\n    <Flex alignItems=\"center\" p={['1em 1em', '2em 2em']} color=\"white\" w=\"100%\">\n      <Flex alignItems=\"center\" flex={1}>\n        <Flex\n          w={['auto', '400px', '500px']}\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Box>\n            <CustomLink to=\"/\">\n              <Text fontSize={['md', 'lg', 'main']} fontWeight=\"bold\">\n                SnippetServe\n              </Text>\n            </CustomLink>\n          </Box>\n\n          <Box display={{ md: 'flex', xs: 'none' }}>\n            <CustomLink to=\"/snippets\">\n              <Text mr=\"2em\">Snippets</Text>\n            </CustomLink>\n            <CustomLink to=\"/extensions\">\n              <Text>Extensions</Text>\n            </CustomLink>\n          </Box>\n        </Flex>\n      </Flex>\n\n      <Flex fontSize=\"sm\">\n        <IconButton\n          variant=\"ghost\"\n          aria-label=\"Search snippets\"\n          icon=\"search\"\n        />\n        <Box display={{ md: 'flex', xs: 'none' }}>\n          <CustomLinkButton to=\"signin\" variant=\"ghost\">\n            Sign In\n          </CustomLinkButton>\n          <CustomLinkButton to=\"/signup\" variantColor=\"blue\" variant=\"solid\">\n            Sign Up\n          </CustomLinkButton>\n        </Box>\n        <DropDownMenu display={{ md: 'none' }} />\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default Header;\n","import { Button, Heading, Stack, Text } from '@chakra-ui/core';\nimport React from 'react';\nimport Typist from 'react-typist';\n\nfunction Hero() {\n  return (\n    <Stack mt=\"2em\" alignItems=\"center\" color=\"white\">\n      <Heading\n        fontFamily=\"Montserrat, sans-serif\"\n        fontSize={['32px', '48px', '63px']}\n        h={['100px', 'auto']}\n        textAlign=\"center\"\n      >\n        <Typist>\n          Big Pieces\n          <Typist.Delay ms={500} />\n          <Typist.Backspace count={12} />\n          Small Pieces To Finish up your code\n        </Typist>\n      </Heading>\n      <Text\n        fontSize={['sm', 'md', 'lg']}\n        display=\"inline-block\"\n        w={['70%', '500px']}\n        textAlign=\"center\"\n        mt=\"2em\"\n      >\n        Get snippets that will definetly ease your coding life, and also\n        contribute to help others\n      </Text>\n      <Button variantColor=\"blue\" mt=\"2em\" size=\"lg\">\n        Get Started\n      </Button>\n    </Stack>\n  );\n}\n\nexport default Hero;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { Box, SimpleGrid } from '@chakra-ui/core';\nimport React from 'react';\n\nfunction RepeatGrid({ ...props }: any) {\n  const boxes = () => {\n    const l = [];\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < 20; i++) {\n      l.push(<Box key={i} bg=\"gray.100\" rounded=\"50%\" w=\"20px\" h=\"20px\" />);\n    }\n    return l;\n  };\n  return (\n    <SimpleGrid\n      columns={5}\n      spacing=\"5px\"\n      position=\"absolute\"\n      zIndex={-1}\n      w=\"200px\"\n      h=\"200px\"\n      alignItems=\"center\"\n      justifyItems=\"center\"\n      display={{ xs: 'none', md: 'none', lg: 'grid' }} // remove for small screens\n      {...props}\n    >\n      {boxes()}\n    </SimpleGrid>\n  );\n}\n\nexport default RepeatGrid;\n","import { Stack, Text } from '@chakra-ui/core';\nimport React from 'react';\n\ntype StatCardProps = {\n  number: string;\n  title: string;\n  bg: string;\n};\n\nfunction StatCard({ number, title, bg }: StatCardProps) {\n  return (\n    <Stack\n      justifyContent=\"center\"\n      w={['200px', '250px', '300px']}\n      h={['260px', '250px', '300px']}\n      mb={{ xs: '2em' }}\n      textAlign=\"center\"\n      bg={bg}\n      boxShadow=\"0 4px 6px 0 hsla(0, 0%, 0%, 0.2)\"\n      borderRadius=\"3px\"\n    >\n      <Text fontSize=\"mega\" fontWeight=\"bold\">\n        {number}\n      </Text>\n      <Text pb=\"1em\" fontWeight=\"bold\" fontSize=\"2xl\">\n        {title}\n      </Text>\n    </Stack>\n  );\n}\n\nexport default StatCard;\n","const mockData = [\n  {\n    id: 1,\n    title: 'Fresh Code',\n    description:\n      \"Put it in MainActivity.java Use this in gradle: implementation 'com.github.satyan:sugar:1.4'\",\n    tag: 'Sugar DB',\n    owner: 'Code Yard',\n    score: '1200'\n  },\n  {\n    id: 2,\n    title: 'DoubleTextViewAdapter',\n    description:\n      \"Use this to get 2 TextViews in a ListView.. You need to create DataModel.java and also the layout file'\",\n    tag: 'AndroidB',\n    owner: 'Code Yard',\n    score: '220'\n  },\n  {\n    id: 3,\n    title: 'A very complex python scripte',\n    description: 'NOT RECOMMENDED FOR BEGINNERS',\n    tag: 'pythonB',\n    owner: 'Code Yard',\n    score: '78'\n  }\n];\n\nexport default mockData;\n","import { Box, Flex, Heading, Image, Stack, Text } from '@chakra-ui/core';\nimport React from 'react';\nimport heroImg from '../assets/hero.svg';\nimport {\n  AndroidBig,\n  AtomBig,\n  IntelIJBig,\n  PycharmBig,\n  VsCodeBig\n} from '../assets/images';\nimport Card from '../components/Card';\nimport CustomLinkButton from '../components/CustomLinkButton';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Hero from '../components/Hero';\nimport RepeatedGrid from '../components/RepeatGrid';\nimport StatCard from '../components/StatCard';\nimport mockData from './mockData';\n\n// TODO: refactor\n\nfunction Home() {\n  const extensions = [VsCodeBig, AndroidBig, AtomBig, IntelIJBig, PycharmBig];\n  return (\n    <Stack h=\"100%\">\n      {/* --- MAIN SECTION  --- */}\n      <Box h=\"100vh\" position=\"relative\">\n        <Box\n          position=\"absolute\"\n          top={0}\n          w=\"100%\"\n          h={['75%', '65%']}\n          backgroundColor=\"gray.700\"\n          zIndex={-1}\n        />\n        <Header />\n        <Hero />\n        <Box w={['auto', '700px']} m={['1em auto', 'auto']}>\n          <Image size=\"auto\" src={heroImg} />\n        </Box>\n      </Box>\n      {/* --- MAIN SECTION --- */}\n\n      {/* Snippets Showcase Panel */}\n      <Stack\n        position=\"relative\"\n        minHeight=\"100vh\"\n        justifyContent=\"center\"\n        mt=\"2em\"\n      >\n        <Heading textAlign=\"center\" pb=\"2em\">\n          Latest Code Snippets\n        </Heading>\n        <Flex\n          justifyContent=\"space-around\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n          m=\"auto\"\n          mt=\"1.5em\"\n          w=\"90%\"\n        >\n          {mockData.map((item) => (\n            <Card item={item} key={item.id} />\n          ))}\n        </Flex>\n        <CustomLinkButton\n          variant=\"solid\"\n          variantColor=\"blue\"\n          w=\"150px\"\n          p=\"1.5em\"\n          m=\"2em auto\"\n          to=\"/snippets\"\n        >\n          Browse More\n        </CustomLinkButton>\n        <RepeatedGrid top=\"24%\" left=\"3%\" />\n      </Stack>\n      {/* Snippets Showcase Panel */}\n\n      {/* Extensions panel */}\n      <Stack spacing={10} bg=\"#F4F4F4\">\n        <Text fontSize=\"4xl\" textAlign=\"center\" mt=\"1em\" fontWeight=\"bold\">\n          Extensions\n        </Text>\n        <Flex\n          flexWrap=\"wrap\"\n          m=\"0 auto 4em auto\"\n          w={['80%', '70%', '50%']}\n          justifyContent=\"space-around\"\n        >\n          {extensions.map((extension, index) => (\n            <Image\n              src={extension}\n              size={['90px', '110px', '130pxk']}\n              fill=\"red\"\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n            />\n          ))}\n        </Flex>\n      </Stack>\n      {/* Extension  panel */}\n\n      {/* Stats Panel */}\n      <Stack\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        h={['100%', '70vh']}\n        color=\"white\"\n        position=\"relative\"\n        mt=\"2em\"\n      >\n        <RepeatedGrid left=\"10%\" top=\"15%\" />\n        <Flex\n          w=\"80%\"\n          h=\"100%\"\n          m=\"auto\"\n          justifyContent=\"space-around\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <StatCard title=\"Code snippets\" number=\"86\" bg=\"blue.400\" />\n          <StatCard title=\"Extension\" number=\"1\" bg=\"green.400\" />\n          <StatCard title=\"Active Contributers\" number=\"12\" bg=\"gray.500\" />\n        </Flex>\n      </Stack>\n      {/* Stats Panel */}\n\n      <Footer />\n    </Stack>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction Snippets() {\n  return (\n    <div>\n      <h1>Snippets page!</h1>\n    </div>\n  );\n}\n\nexport default Snippets;\n","import React from 'react';\n\nfunction Extensions() {\n  return (\n    <div>\n      <h1>Extensions Page!</h1>\n    </div>\n  );\n}\n\nexport default Extensions;\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport { Box, Flex, Text } from '@chakra-ui/core';\nimport React from 'react';\nimport CustomLinkButton from './CustomLinkButton';\n\ntype SidePanelProps = {\n  currentPage: 'signin' | 'signup';\n};\n\nfunction SidePanel({ currentPage }: SidePanelProps) {\n  const title = currentPage === 'signup' ? 'Hello' : 'Welcome';\n  const buttonText = currentPage === 'signup' ? 'Sign In' : 'Sign Up';\n  const buttonRoute = currentPage === 'signup' ? 'signin' : 'signup';\n  return (\n    <Flex\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      backgroundColor=\"gray.700\"\n      color=\"white\"\n      textAlign=\"center\"\n      zIndex={10}\n      h=\"100%\"\n      display={['none', 'none', 'none', 'flex']}\n    >\n      <Box>\n        <Text fontSize=\"4xl\" fontWeight=\"bold\">\n          {title}, Developer\n        </Text>\n        <Text w=\"60%\" m=\"2em auto 4em auto\" fontSize=\"lg\">\n          Get snippets that will definetly ease your coding life, and also\n          contribute to help others\n        </Text>\n        <CustomLinkButton\n          variant=\"outline\"\n          size=\"lg\"\n          rounded=\"lg\"\n          to={`/${buttonRoute}`}\n        >\n          {buttonText}\n        </CustomLinkButton>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default SidePanel;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/no-children-prop */\nimport { Input, InputGroup, InputLeftElement } from '@chakra-ui/core';\nimport React from 'react';\n\ntype CustomInputProps = {\n  id: string;\n  icon: any;\n  placeholder: string;\n};\nfunction CustomInput({ id, icon, placeholder, ...props }: CustomInputProps) {\n  return (\n    <InputGroup h=\"70px\" mb=\".5em\" w=\"95%\" m=\"auto\" {...props}>\n      <InputLeftElement children={icon} ml=\"15px\" />\n      <Input\n        id={id}\n        type={id === 'password' ? 'password' : ''}\n        fontSize=\"lg\"\n        variant=\"filled\"\n        placeholder={placeholder}\n        bg=\"gray.200\"\n        {...props}\n        h=\"100%\"\n        pl=\"3.5em\"\n      />\n    </InputGroup>\n  );\n}\n\nexport default CustomInput;\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-props-no-spreading */\nimport {\n  Button,\n  FormControl,\n  FormErrorMessage,\n  Icon,\n  Stack\n} from '@chakra-ui/core';\nimport { Field, Formik } from 'formik';\nimport React from 'react';\nimport * as Yup from 'yup';\nimport CustomInput from './CustomInput';\n\ntype SignInFormValues = {\n  email: string;\n  password: string;\n};\n\nfunction SignInForm() {\n  const initialValues: SignInFormValues = { email: '', password: '' };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={Yup.object({\n        email: Yup.string().required('Required').email('Invalid email'),\n        password: Yup.string().required('Required')\n      })}\n      onSubmit={(values, actions) => {\n        // just for simulating submit, in the real version this should redirect somewhere\n        // also take look: https://formik.org/docs/examples/async-submission\n        setTimeout(() => {\n          console.log(values);\n          actions.setSubmitting(false);\n        }, 2000);\n      }}\n    >\n      {(formikBag) => (\n        <form onSubmit={formikBag.handleSubmit}>\n          <Stack m=\"auto\" mt=\"2em\" w={['90%', '70%', '500px']}>\n            <Field name=\"email\">\n              {({ form, field }: any) => (\n                <FormControl\n                  isInvalid={form.errors.email && form.touched.email}\n                >\n                  <CustomInput\n                    {...field}\n                    id=\"email\"\n                    icon={\n                      <Icon\n                        name=\"email\"\n                        color=\"gray.600\"\n                        size=\"30px\"\n                        mt=\"1.7em\"\n                      />\n                    }\n                    placeholder=\"Email\"\n                  />\n                  <FormErrorMessage w=\"95%\" m=\"auto\">\n                    {form.errors.email}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Field name=\"password\">\n              {({ form, field }: any) => (\n                <FormControl\n                  isInvalid={form.errors.password && form.touched.password}\n                  h=\"80px\"\n                  mt=\".5em\"\n                >\n                  <CustomInput\n                    {...field}\n                    id=\"password\"\n                    icon={\n                      <Icon\n                        name=\"lock\"\n                        color=\"gray.600\"\n                        size=\"30px\"\n                        mt=\"1.7em\"\n                      />\n                    }\n                    placeholder=\"Password\"\n                  />\n                  <FormErrorMessage w=\"95%\" m=\"auto\">\n                    {form.errors.password}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Button\n              m=\"1em auto\"\n              variantColor=\"blue\"\n              size=\"lg\"\n              w=\"160px\"\n              isLoading={formikBag.isSubmitting}\n              type=\"submit\"\n            >\n              Sign in\n            </Button>\n            <Button\n              variant=\"ghost\"\n              variantColor=\"blue\"\n              color=\"black\"\n              size=\"sm\"\n              m=\"2em auto\"\n            >\n              Forgot Password?\n            </Button>\n          </Stack>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default SignInForm;\n","import { Box, Flex, Heading, Link, Stack, Text } from '@chakra-ui/core';\nimport React from 'react';\nimport { ImGithub, ImGoogle3 } from 'react-icons/im';\nimport SidePanel from '../components/SidePanel';\nimport SignInForm from '../components/SignInForm';\n\nfunction SignIn() {\n  return (\n    <Flex h=\"100vh\">\n      <Flex\n        h=\"100%\"\n        w={['100%', '85%', '60%']}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        m=\"auto\"\n      >\n        <Stack alignItems=\"center\" justifyContent=\"center\" h=\"70%\">\n          <Heading\n            color=\"blue.500\"\n            fontWeight=\"bold\"\n            fontSize={['3xl', '4xl', '5xl']}\n            textAlign=\"center\"\n          >\n            Sign in to SnippetServe\n          </Heading>\n          <Flex mt=\"2em\" justifyContent=\"space-around\" w=\"150px\">\n            {/* I gave temporary links */}\n            <Link href=\"https://www.google.com\">\n              <Box\n                color=\"gray.700\"\n                as={ImGoogle3}\n                size=\"40px\"\n                aria-label=\"google\"\n              />\n            </Link>\n            <Link href=\"https://www.github.com\">\n              <Box\n                color=\"gray.700\"\n                as={ImGithub}\n                size=\"40px\"\n                aria-label=\"google\"\n              />\n            </Link>\n          </Flex>\n          <Text mt=\"2em\" fontWeight=\"bold\">\n            OR\n          </Text>\n          <SignInForm />\n        </Stack>\n      </Flex>\n      <SidePanel currentPage=\"signin\" />\n    </Flex>\n  );\n}\n\nexport default SignIn;\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/jsx-props-no-spreading */\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormErrorMessage,\n  Icon,\n  Stack\n} from '@chakra-ui/core';\nimport { Field, Formik } from 'formik';\nimport React from 'react';\nimport { BsPeopleCircle } from 'react-icons/bs';\nimport * as Yup from 'yup';\nimport CustomInput from './CustomInput';\n\ntype SignInFormValues = {\n  username: string;\n  email: string;\n  password: string;\n};\n\nfunction SignInForm() {\n  const initialValues: SignInFormValues = {\n    username: '',\n    email: '',\n    password: ''\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={Yup.object({\n        username: Yup.string().required('Required').min(4),\n        email: Yup.string().required('Required').email('Invalid email'),\n        password: Yup.string().required('Required')\n      })}\n      onSubmit={(values, actions) => {\n        // just for simulating submit, in the real version this should post\n        // values to server and redirect somewhere\n        // also take look: https://formik.org/docs/examples/async-submission\n        setTimeout(() => {\n          console.log(values);\n          actions.setSubmitting(false);\n        }, 2000);\n      }}\n    >\n      {(formikBag) => (\n        <form onSubmit={formikBag.handleSubmit}>\n          <Stack m=\"auto\" mt=\"2em\" w={['90%', '70%', '500px']}>\n            <Field name=\"username\">\n              {({ form, field }: any) => (\n                <FormControl\n                  isInvalid={form.errors.username && form.touched.username}\n                >\n                  <CustomInput\n                    {...field}\n                    id=\"username\"\n                    icon={\n                      <Box\n                        as={BsPeopleCircle}\n                        size=\"30px\"\n                        mt=\"1.7em\"\n                        color=\"gray.600\"\n                      />\n                    }\n                    placeholder=\"Username\"\n                  />\n                  <FormErrorMessage w=\"95%\" m=\"auto\">\n                    {form.errors.username}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Field name=\"email\">\n              {({ form, field }: any) => (\n                <FormControl\n                  isInvalid={form.errors.email && form.touched.email}\n                  mt=\".5em\"\n                >\n                  <CustomInput\n                    {...field}\n                    id=\"email\"\n                    icon={\n                      <Icon\n                        name=\"email\"\n                        color=\"gray.600\"\n                        size=\"30px\"\n                        mt=\"1.7em\"\n                      />\n                    }\n                    placeholder=\"Email\"\n                  />\n                  <FormErrorMessage w=\"95%\" m=\"auto\">\n                    {form.errors.email}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Field name=\"password\">\n              {({ form, field }: any) => (\n                <FormControl\n                  isInvalid={form.errors.password && form.touched.password}\n                  h=\"80px\"\n                  mt=\".5em\"\n                >\n                  <CustomInput\n                    {...field}\n                    id=\"password\"\n                    icon={\n                      <Icon\n                        name=\"lock\"\n                        color=\"gray.600\"\n                        size=\"30px\"\n                        mt=\"1.7em\"\n                      />\n                    }\n                    placeholder=\"Password\"\n                  />\n                  <FormErrorMessage w=\"95%\" m=\"auto\">\n                    {form.errors.password}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Button\n              m=\"1em auto\"\n              variantColor=\"blue\"\n              size=\"lg\"\n              w=\"160px\"\n              isLoading={formikBag.isSubmitting}\n              type=\"submit\"\n            >\n              Sign up\n            </Button>\n          </Stack>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default SignInForm;\n","import { Box, Flex, Heading, Link, Stack, Text } from '@chakra-ui/core';\nimport React from 'react';\nimport { ImGithub, ImGoogle3 } from 'react-icons/im';\nimport SidePanel from '../components/SidePanel';\nimport SignUpForm from '../components/SignUpForm';\n\nfunction SignUp() {\n  return (\n    <Flex h=\"100vh\">\n      <SidePanel currentPage=\"signup\" />\n      <Flex\n        h=\"100%\"\n        w={['100%', '85%', '60%']}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        m=\"auto\"\n      >\n        <Stack alignItems=\"center\" justifyContent=\"center\" h=\"70%\">\n          <Heading\n            color=\"blue.500\"\n            fontWeight=\"bold\"\n            fontSize={['3xl', '4xl', '5xl']}\n            textAlign=\"center\"\n          >\n            Create Account\n          </Heading>\n          <Flex mt=\"2em\" justifyContent=\"space-around\" w=\"150px\">\n            {/* I gave temporary links */}\n            <Link href=\"https://www.google.com\">\n              <Box\n                as={ImGoogle3}\n                size=\"40px\"\n                aria-label=\"google\"\n                color=\"gray.700\"\n              />\n            </Link>\n            <Link href=\"https://www.github.com\">\n              <Box\n                as={ImGithub}\n                color=\"gray.700\"\n                size=\"40px\"\n                aria-label=\"google\"\n              />\n            </Link>\n          </Flex>\n          <Text mt=\"2em\" fontWeight=\"bold\">\n            OR\n          </Text>\n          <SignUpForm />\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default SignUp;\n","import React from 'react';\n\nfunction NoMatch() {\n  return (\n    <div>\n      <h1>Page not found</h1>\n    </div>\n  );\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Extensions, Home, NoMatch, SignIn, SignUp, Snippets } from './pages';\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/snippets\">\n          <Snippets />\n        </Route>\n        <Route exact path=\"/extensions\">\n          <Extensions />\n        </Route>\n        <Route exact path=\"/signin\">\n          <SignIn />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route path=\"*\">\n          <NoMatch />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { theme } from '@chakra-ui/core';\n\nexport default {\n  ...theme,\n  fonts: {\n    heading: \"'Montserrat', sans-serif\",\n    body: \"'Montserrat', sans-serif\",\n    mono: \"'Montserrat', monospace\"\n  },\n  fontSizes: {\n    main: '24px',\n    xs: '0.75rem',\n    sm: '0.875rem',\n    md: '1rem',\n    lg: '1.125rem',\n    xl: '1.25rem',\n    '2xl': '1.5rem',\n    '3xl': '1.875rem',\n    '4xl': '2.25rem',\n    '5xl': '3rem',\n    '6xl': '4rem',\n    mega: '100px'\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CSSReset />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/vscode_small.a1f0d8b3.png\";"],"sourceRoot":""}